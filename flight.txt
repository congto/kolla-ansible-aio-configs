#1. Download and install Kolla and Kolla Ansible
yum install -y wget tar
wget -c https://tarballs.opendev.org/openstack/kolla/kolla-stable-xena.tar.gz
wget -c https://tarballs.opendev.org/openstack/kolla-ansible/kolla-ansible-stable-xena.tar.gz
tar -xf kolla-stable-xena.tar.gz
tar -xf kolla-ansible-stable-xena.tar.gz
ls
pip3 install ./kolla-13.0.1.dev4
pip3 install ./kolla-ansible-13.0.1.dev12
pip3 list --format=columns

#2. Create the /etc/kolla directory
mkdir -p /etc/kolla

#3. Copy the Kolla Ansible configuration files to /etc/kolla directory
cp -r kolla-ansible-13.0.1.dev12/etc/kolla/* /etc/kolla

#4. Copy the all-in-one inventory files to the current directory
cp kolla-ansible-13.0.1.dev12/ansible/inventory/all-in-one .

#5. Check whether the configuration of inventory is correct or not
ansible -i all-in-one all -m ping

#6. Generate Kolla passwords
kolla-genpwd

#7. Edit the main configuration file of Kolla Ansible
vim /etc/kolla/globals.yml

---

kolla_install_type: "source"
kolla_internal_vip_address: "10.11.11.10"
kolla_internal_fqdn: "internal.stratus.ok"
kolla_external_vip_address: "10.10.10.10"
kolla_external_fqdn: "external.stratus.ok"
network_interface: "dummy11"
kolla_external_vip_interface: "dummy10"
api_interface: "dummy11"
storage_interface: "dummy12"
tunnel_interface: "dummy13"
#octavia_network_interface: "o-hm0"
neutron_external_interface: "dummy14"
neutron_plugin_agent: "ovn"
kolla_enable_tls_internal: "yes"
kolla_enable_tls_external: "yes"
kolla_admin_openrc_cacert: "{{ kolla_certificates_dir }}/ca/root.crt"
kolla_copy_ca_into_containers: "yes"
kolla_enable_tls_backend: "yes"
kolla_verify_tls_backend: "yes"
openstack_cacert: "/etc/pki/ca-trust/source/anchors/kolla-customca-root.crt"
enable_barbican: "yes"
enable_cinder: "yes"
enable_cinder_backup: "yes"
enable_cinder_backend_nfs: "yes"
enable_fluentd: "no"
enable_magnum: "yes"
enable_neutron_vpnaas: "yes"
enable_neutron_dvr: "yes"
enable_neutron_qos: "yes"
enable_neutron_provider_networks: "yes"
enable_neutron_segments: "yes"
enable_neutron_sfc: "yes"
enable_neutron_trunk: "yes"
enable_neutron_port_forwarding: "yes"
enable_octavia: "yes"
enable_prometheus: "no"
glance_backend_file: "yes"
cinder_backup_driver: "nfs"
cinder_backup_share: "10.12.12.11:/var/nfs_shares/cinder_backup"
neutron_ovn_distributed_fip: "yes"
neutron_ovn_dhcp_agent: "yes"
octavia_certs_country: ID
octavia_certs_state: Jabar
octavia_certs_organization: Stratus
octavia_certs_organizational_unit: Octavia
magnum_extra_volumes:
  - "/etc/kolla/config/extras_volumes/magnum:/var/lib/kolla/extras_volumes/magnum"


#8. Modify generate-root.yml task of certificates role
vim /usr/local/share/kolla-ansible/ansible/roles/certificates/tasks/generate-root.yml

.....
    -subj "/CN=StratusCA/"
.....


#9. Modify openssl-kolla.cnf jinja2 template of certificates role
vim /usr/local/share/kolla-ansible/ansible/roles/certificates/templates/openssl-kolla.cnf.j2

.....
[req_distinguished_name]
countryName = ID
stateOrProvinceName = Jabar
localityName = Bogor
organizationalUnitName = Stratus
commonName = {{ kolla_external_fqdn }}
.....


#10. Modify openssl-kolla-internal.cnf jinja2 template of certificates role
vim /usr/local/share/kolla-ansible/ansible/roles/certificates/templates/openssl-kolla-internal.cnf.j2

.....
[req_distinguished_name]
countryName = ID
stateOrProvinceName = Jabar
localityName = Bogor
organizationalUnitName = Stratus
commonName = {{ kolla_internal_fqdn }}
.....


#11. Modify openssl-kolla-backend.cnf jinja2 template of certificates role
vim /usr/local/share/kolla-ansible/ansible/roles/certificates/templates/openssl-kolla-backend.cnf.j2

.....
[req_distinguished_name]
countryName = ID
stateOrProvinceName = Jabar
localityName = Bogor
organizationalUnitName = Stratus
.....


#12. Generate self-sign certificates
kolla-ansible -i all-in-one certificates

openssl x509 -req -extfile <(printf "subjectAltName=DNS:external.stratus.ok") -days 1024 -in /etc/kolla/certificates/private/external/external.csr -CA /etc/kolla/certificates/private/root/root.crt -CAkey /etc/kolla/certificates/private/root/root.key -CAcreateserial -out /etc/kolla/certificates/private/external/external.crt
openssl x509 -req -extfile <(printf "subjectAltName=DNS:internal.stratus.ok") -days 1024 -in /etc/kolla/certificates/private/internal/internal.csr -CA /etc/kolla/certificates/private/root/root.crt -CAkey /etc/kolla/certificates/private/root/root.key -CAcreateserial -out /etc/kolla/certificates/private/internal/internal.crt
cat /etc/kolla/certificates/private/external/external.crt /etc/kolla/certificates/private/external/external.key > /etc/kolla/certificates/haproxy.pem
cat /etc/kolla/certificates/private/internal/internal.crt /etc/kolla/certificates/private/internal/internal.key > /etc/kolla/certificates/haproxy-internal.pem

openssl x509 -in /etc/kolla/certificates/ca/root.crt -text
openssl x509 -in /etc/kolla/certificates/haproxy.pem -text
openssl x509 -in /etc/kolla/certificates/haproxy-internal.pem -text
openssl x509 -in /etc/kolla/certificates/backend-cert.pem -text

cp /etc/kolla/certificates/ca/root.crt /etc/pki/ca-trust/source/anchors/stratus-root-ca.crt
update-ca-trust

#13. Generate certificates for octavia deployment
kolla-ansible -i all-in-one octavia-certificates

#14. Neutron custom configuration
cat <<EOF > /etc/kolla/config/neutron.conf
[DEFAULT]
global_physnet_mtu = 1558
EOF

#15. MTU configuration
mkdir /etc/kolla/config/neutron
cat <<EOF > /etc/kolla/config/neutron/ml2_conf.ini
[ml2]
path_mtu = 1558
physical_network_mtus = physnet1:1500
EOF

#16. Magnum custom configuration
cat <<EOF > /etc/kolla/config/magnum.conf
[drivers]
openstack_ca_file = /etc/pki/ca-trust/source/anchors/kolla-customca-root.crt

[trust]
cluster_user_trust = true
EOF

#17. Define NFS shares for Cinder backend
cat <<EOF > /etc/kolla/config/nfs_shares
10.12.12.11:/var/nfs_shares/cinder
EOF

#18. Deploy the OpenStack
yum install -y screen
screen -R 0
kolla-ansible -i all-in-one bootstrap-servers
kolla-ansible -i all-in-one prechecks
kolla-ansible -i all-in-one deploy
#Ctrl+A,D
ip add add 10.10.10.10/24 dev dummy10
ip add add 10.11.11.10/24 dev dummy11
screen -r 0
kolla-ansible -i all-in-one post-deploy
kolla-ansible -i all-in-one check
#Ctrl+A,D

#19. Activate br-ex interface
ip link set br-ex up
ip add add 10.14.14.11/24 dev br-ex
ip add show dev br-ex

#20. Install OpenStack client packages
yum install -y python3-openstackclient python3-barbicanclient python3-heatclient python3-magnumclient python3-octaviaclient

#21. Verify OpenStack status
cp /etc/kolla/admin-openrc.sh .
source admin-openrc.sh
openstack endpoint list

#22. Create Amphora Image
yum install -y diskimage-builder debootstrap
wget -c https://tarballs.opendev.org/openstack/octavia/octavia-stable-xena.tar.gz
tar -xf octavia-stable-xena.tar.gz
ls
cd octavia-9.0.1.dev8/diskimage-create
./diskimage-create.sh
cd

#23. Register Amphora Image to Glance
cat /etc/kolla/octavia-openrc.sh > octavia-openrc.sh ; grep OS_CACERT /etc/kolla/admin-openrc.sh >> octavia-openrc.sh
source octavia-openrc.sh
openstack image create amphora-x64-haproxy --disk-format qcow2 --private --tag amphora --file octavia-9.0.1.dev8/diskimage-create/amphora-x64-haproxy.qcow2
openstack image list

#24. Configure Octavia health manager interface and bridge
source octavia-openrc.sh
OCTAVIA_MGMT_PORT_IP=10.1.0.11

SUBNET_ID=$(openstack subnet show lb-mgmt-subnet -f value -c id)
PORT_FIXED_IP="--fixed-ip subnet=$SUBNET_ID,ip-address=$OCTAVIA_MGMT_PORT_IP"
MGMT_PORT_ID=$(openstack port create --security-group lb-mgmt-sec-grp --device-owner Octavia:health-mgr --host=$(hostname) -c id -f value --network lb-mgmt-net $PORT_FIXED_IP octavia-health-manager-listen-port)
MGMT_PORT_MAC=$(openstack port show -c mac_address -f value $MGMT_PORT_ID)
NETID=$(openstack network show lb-mgmt-net -c id -f value)

docker exec openvswitch_vswitchd ovs-vsctl show
docker exec openvswitch_vswitchd ovs-vsctl -- --may-exist add-port br-int o-hm0 -- set Interface o-hm0 type=internal -- set Interface o-hm0 external-ids:iface-status=active -- set Interface o-hm0 external-ids:attached-mac=$MGMT_PORT_MAC -- set Interface o-hm0 external-ids:iface-id=$MGMT_PORT_ID
docker exec openvswitch_vswitchd ovs-vsctl show

ip link set o-hm0 up
ip link set dev o-hm0 address $MGMT_PORT_MAC
ip add add dev o-hm0 ${OCTAVIA_MGMT_PORT_IP}/24
ip add show dev o-hm0

#25. Add rule to allow port 5555/UDP on lb-mgmt-sec-grp security group
source octavia-openrc.sh
openstack security group rule create --protocol udp --dst-port 5555 lb-mgmt-sec-grp

#26. Reconfigure Octavia
vim /etc/kolla/globals.yml

.....
octavia_network_interface: "o-hm0"
.....

screen -r 0
kolla-ansible -i all-in-one reconfigure -t octavia
#Ctrl+A,D

#27. Set role load-balancer_admin to admin user on admin project
source admin-openrc.sh
openstack role list
openstack role add --user admin --project admin load-balancer_admin
openstack role assignment list --names